@model ITest.Areas.User.Models.TakeTestViewModel


<div class="col-md-12">

    <form method="post">
        <h1>@Model.Name</h1>
        <div>
            <div id="test-category" value="@Model.Category"><p><strong>Category</strong>: @Model.Category</p></div>
            <div id="countdown">
                <div class="values value-size pull-right"></div>
            </div>
        </div>
        @foreach (var question in Model.Questions)
        {
            @Html.Partial("QuestionPartial", question);
        }

        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
            Submit Test
        </button>
    </form>
</div>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Are you sure?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                You are trying to submit your test.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" id="publish" class="btn btn-primary">Submit</button>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script src="~/js/Timer.js"></script>
    <script>

        $(function () {
            var timer = new Timer();
            timer.start({ countdown: true, startValues: { seconds: @Model.RequestedTime} });
            $('#countdown .values').html(timer.getTimeValues().toString());
            timer.addEventListener('secondsUpdated', function (e) {
                $('#countdown .values').html(timer.getTimeValues().toString());
            });
            timer.addEventListener('targetAchieved', function (e) {
                $('#publish').click();
            });
        });

        $('#publish').click(function () {
            event.preventDefault();
            var answers = []

            var radios = $("input[type='radio']").filter(":checked").each(function () {
                answers.push({
                    QuestionId : $(this).attr("name"),
                    AnswerId : $(this).attr("value")
                });
            });

            var category = $('#test-category').attr("value");

            var data = {
                UserAnswers: answers,
                Category : category
            }

            makePost("Test/SubmitTest", data, function (response) {
                window.location = "/User/Home/Index";
            });
        })
    </script>
}